// =============================================================================
//	TOOLS - HELPERS
// =============================================================================

// Clearfix
%clearfix {
    &::after {
        clear: both;
        content: '';
        display: table;
    }
}

// Vertically align centre
%v-align {
    align-items: center;
    display: flex;
}

// Centre element that is absolutely positioned
@mixin abs-centre {
    left: 50%;
    transform: translateX(-50%);
}

// Reset an element that is absolutely positioned centred
@mixin abs-cancel-centre {
    left: auto;
    transform: translateX(0);
}

// Remove default list styling
%remove-list-styles {
    @include padding(null 0);
    margin: 0;

    li {
        list-style: none;
        padding-left: 0;
    }
}

// Remove default link styling
%remove-link-styles {
    font-weight: inherit;
    text-decoration: none;
}

// Clickable elements that are not an anchor
%clickable {
    cursor: pointer;

    &:active,
    &:focus,
    &:hover {
        opacity: $opacity-hover;
    }
}

// Hide text not the pseudo
%hide-text-not-pseudo {
    text-indent: -9999px;

    &::before,
    &::after {
        float: left;
        height: 100%;
        margin: 0;
        text-indent: 0;
        width: 100%;
    }
}

// BG Images
%bg-cover {
    background-position: center center;
    background-repeat: no-repeat;
    background-size: cover;
}

// Hide text
%hide-text {
    overflow: hidden;
    text-indent: -9999px;
}

// Margin centre
%m-centre {
    margin-left: auto;
    margin-right: auto;
}

// Full width/height overlay.
// If it is a pseudo element, it will meeds an empty content property and the wrapper to have a relative position
@mixin full-overlay($bg-colour: $black) {
    @include position(absolute, 0 0 0 0);
    background-color: $bg-colour;
    height: 100%;
    width: 100%;
}

@mixin horizontal-spacing($h-spacing: $h-spacing, $h-spacing-mobile: $h-spacing-mobile) {
    @include padding(null $h-spacing-mobile);

    @include screen-md-min {
        @include padding(null $h-spacing);
    }
}

// A container that centre aligns with padding and max width
@mixin container($max-width-content: $max-width-content) {
    @extend %m-centre;
    @include horizontal-spacing;
    max-width: $max-width-content;
}

// Maintain aspect radio mixin
@mixin aspect-ratio($width, $height) {
    position: relative;

    &::before {
        content: '';
        display: block;
        padding-top: ($height / $width) * 100%;
        width: 100%;
    }

    > .aspect-ratio-content {
        @include position(absolute, 0 0 0 0);
    }
}

// Inline list gutter
@mixin inline-list-gutter($gutter) {
    @include margin(null (-$gutter));

    li {
        @include margin(null $gutter);
        display: inline-block;
    }
}
